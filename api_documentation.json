{
  "openapi": "3.0.0",
  "info": {
    "title": "Healthcare Backend API",
    "description": "A comprehensive healthcare management system API built with Django REST Framework",
    "version": "1.0.0",
    "contact": {
      "name": "Healthcare Backend Team",
      "email": "support@healthcare-backend.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8000",
      "description": "Development server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/api/auth/register/": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string", "example": "John Doe" },
                  "email": { "type": "string", "example": "john@example.com" },
                  "username": { "type": "string", "example": "johndoe" },
                  "password": { "type": "string", "example": "securepassword123" },
                  "password_confirm": { "type": "string", "example": "securepassword123" }
                },
                "required": ["name", "email", "username", "password", "password_confirm"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "user": { "type": "object" },
                    "tokens": {
                      "type": "object",
                      "properties": {
                        "access": { "type": "string" },
                        "refresh": { "type": "string" }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login/": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Login user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string", "example": "john@example.com" },
                  "password": { "type": "string", "example": "securepassword123" }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful"
          }
        }
      }
    },
    "/api/patients/": {
      "get": {
        "tags": ["Patients"],
        "summary": "List all patients",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": { "type": "string" },
            "description": "Search by name, email, or phone"
          },
          {
            "name": "gender",
            "in": "query",
            "schema": { "type": "string", "enum": ["M", "F", "O"] },
            "description": "Filter by gender"
          }
        ],
        "responses": {
          "200": {
            "description": "List of patients"
          }
        }
      },
      "post": {
        "tags": ["Patients"],
        "summary": "Create a new patient",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string", "example": "Jane Smith" },
                  "email": { "type": "string", "example": "jane@example.com" },
                  "phone_number": { "type": "string", "example": "+1234567890" },
                  "date_of_birth": { "type": "string", "format": "date", "example": "1990-01-01" },
                  "gender": { "type": "string", "enum": ["M", "F", "O"], "example": "F" },
                  "address": { "type": "string", "example": "123 Main St, City, State" },
                  "emergency_contact_name": { "type": "string", "example": "John Smith" },
                  "emergency_contact_phone": { "type": "string", "example": "+1234567891" }
                },
                "required": [
                  "name",
                  "email",
                  "date_of_birth",
                  "gender",
                  "address",
                  "emergency_contact_name",
                  "emergency_contact_phone"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Patient created successfully"
          }
        }
      }
    },
    "/api/patients/{id}/": {
      "get": {
        "tags": ["Patients"],
        "summary": "Get patient details",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Patient details"
          }
        }
      },
      "put": {
        "tags": ["Patients"],
        "summary": "Update patient",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Patient updated successfully"
          }
        }
      },
      "delete": {
        "tags": ["Patients"],
        "summary": "Delete patient",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Patient deleted successfully"
          }
        }
      }
    },
    "/api/doctors/": {
      "get": {
        "tags": ["Doctors"],
        "summary": "List all doctors",
        "responses": {
          "200": {
            "description": "List of doctors"
          }
        }
      },
      "post": {
        "tags": ["Doctors"],
        "summary": "Create a new doctor",
        "responses": {
          "201": {
            "description": "Doctor created successfully"
          }
        }
      }
    },
    "/api/mappings/": {
      "get": {
        "tags": ["Patient-Doctor Mappings"],
        "summary": "List all patient-doctor mappings",
        "responses": {
          "200": {
            "description": "List of mappings"
          }
        }
      },
      "post": {
        "tags": ["Patient-Doctor Mappings"],
        "summary": "Assign a doctor to a patient",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "patient": { "type": "integer", "example": 1 },
                  "doctor": { "type": "integer", "example": 1 },
                  "notes": { "type": "string", "example": "Primary care physician" },
                  "is_primary": { "type": "boolean", "example": true }
                },
                "required": ["patient", "doctor"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Doctor assigned to patient successfully"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "User authentication endpoints"
    },
    {
      "name": "Patients",
      "description": "Patient management endpoints"
    },
    {
      "name": "Doctors",
      "description": "Doctor management endpoints"
    },
    {
      "name": "Patient-Doctor Mappings",
      "description": "Patient-doctor relationship management"
    }
  ]
}
